package com.gamegear.firstwingbox2d;

import java.util.List;
import java.util.ArrayList;

import com.badlogic.gdx.math.Rectangle;
import com.badlogic.gdx.math.Vector2;
import com.badlogic.gdx.physics.box2d.World;
import com.badlogic.gdx.utils.Array;
import com.gamegear.firstwingbox2d.actors.*;
import com.gamegear.firstwingbox2d.levels.Level;

public class FwWorld {

	static final float WORLD_TO_BOX=0.01f;
	static final float BOX_TO_WORLD=100f;
	static final float BOX_STEP=1/120f;
	static final int  BOX_VELOCITY_ITERATIONS=8;
	static final int BOX_POSITION_ITERATIONS=3;
	float accumulator;
	
	World world;
	/** Our player controlled hero **/
	Bob bob;
	/** A world has a level through which Bob needs to go through **/
	Level level;
	
	/** The collision boxes **/
	Array<Rectangle> collisionRects = new Array<Rectangle>();

	// Getters -----------
	
	public Array<Rectangle> getCollisionRects() {
		return collisionRects;
	}
	
	public Bob getBob() {
		return bob;
	}
	
	public Level getLevel() {
		return level;
	}
	
	/** Return only the blocks that need to be drawn **/
	public List<Block> getDrawableBlocks(int width, int height) {
		int x = (int)bob.getPosition().x - width;
		int y = (int)bob.getPosition().y - height;
		if (x < 0) {
			x = 0;
		}
		if (y < 0) {
			y = 0;
		}
		int x2 = x + 2 * width;
		int y2 = y + 2 * height;
		if (x2 > level.getWidth()) {
			x2 = level.getWidth() - 1;
		}
		if (y2 > level.getHeight()) {
			y2 = level.getHeight() - 1;
		}
		
		List<Block> blocks = new ArrayList<Block>();
		Block block;
		for (int col = x; col <= x2; col++) {
			for (int row = y; row <= y2; row++) {
				block = level.getBlocks()[col][row];
				if (block != null) {
					blocks.add(block);
				}
			}
		}
		return blocks;
	}

	// --------------------
	public FwWorld() {
		world = new World(new Vector2(0, 0), true);
		createDemoWorld();
	}
	
	public float ConvertToBox(float x){
	    return x * WORLD_TO_BOX;
	}

	private void createDemoWorld() {
		bob = new Bob(new Vector2(7, 3), world);
		level = new Level(this.world);
		//JSONLoader LevelLoader = new JSONLoader("D:/map.dat");
	}
	
	public void Update(float dt){
	   accumulator+=dt;
	   while(accumulator>BOX_STEP){
		   world.step(BOX_STEP,BOX_VELOCITY_ITERATIONS,BOX_POSITION_ITERATIONS);
		   accumulator-=BOX_STEP;
	   }
	}
}

